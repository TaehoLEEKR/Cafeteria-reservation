plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.mission'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext{
    set('springCloudVersion',"2021.0.1")
}

dependencies {

    implementation project(path:"domain-jwt",configuration:'default')
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'com.h2database:h2'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    //querySQL
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation ('it.ozimov:embedded-redis:0.7.3'){
        exclude group:"org.slf4j", module : "slf4j-simple"
    }



    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

dependencyManagement {
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
